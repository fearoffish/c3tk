#!/usr/bin/env bash

fail() {
  echo "FAIL: $*" >&2
  exit 1
}

install_cmds() {
  for _cmd in "${@}"
  do
    [[ -x ${INSTALL_PATH}/${_cmd} ]] ||
      ln -fs ${INSTALL_PATH}/c3tk ${INSTALL_PATH}/${_cmd}
  done
}

installed_cmds() {
  find "${CONFIG_PATH}/cmds" -mindepth 1 -maxdepth 1 -type f | sed -e "s#${CONFIG_PATH}/cmds/##" | sort
}

install() {
  mkdir -p "${INSTALL_PATH}" "${CONFIG_PATH}"/{cmds,config}
  cp $0 "${INSTALL_PATH}/c3tk"
  if (( $# == 0 ))
  then
    _cmds=($(installed_cmds))
    install_cmds ${_cmds[@]}
  fi
  echo -e "\nAdd ${INSTALL_PATH} to your PATH:\n\n\texport PATH=\"${INSTALL_PATH}:\$PATH\"\n"
  echo "install_path=${INSTALL_PATH}" > ${CONFIG_PATH}/install
  exit 0
}

docker_run() {
  exec docker run --rm --platform="linux/amd64" -w '/w' -v ${PWD}:/w "${@}"
}

usage() {
  cat <<-USAGE
c3tk <cmd> [OPTIONS|ARGS]

Where cmd is either one of:
  add <name> <image>
  configure
  fetch <url-to-.c3tk-file>
  install
  list
  rm <name>
  shell <name>
  X - where X is a cmd that was added via `add` or configured via .c3tk files

USAGE
}

add_usage() {
  cat <<-HELP
c3tk add <name> image=<img> [tag=<tag>] [configs=.<a>,.<b>,...] [tty] [stream]

Where:
   name    - command name to expose to the host system
   tag     - image tag to use, defaults to :latest
   image   - docker compatible registry url
   configs - comma separated list of config files to map via -v
   tty     - if present will add '-t' 
   stream  - if present will add '--log-driver=none -a stdin -a stdout -a stderr'

HELP
}

add_cmd() {
  (( $# > 1 )) || fail "$(add_usage)"

  local _cmd _image _tag
  _cmd="$1" && shift || fail "$(add_usage)"
  # TODO: If empty check if definition file already exists, if so symlink.
  if (( $# > 0 ))
  then
    for arg in "${@}" 
    do 
      case "${arg}" in
        (image=*)
          _image=$(echo ${arg} | awk -F= '{print $2}')
          ;;
        (tag=*)
          _tag=$(echo ${arg} | awk -F= '{print $2}')
          [[ -n "${_tag}" ]] || _tag="latest"
          ;;
      esac
      echo "${arg}" > ${CONFIG_PATH}/cmds/${_cmd}
    done
    [[ -n "${_image}" ]] || fail "Image Required"
  else
    if [[ -s ${CONFIG_PATH}/cmds/${_cmd} ]]
    then
      _image=$(awk -F= '/image=/{print $2}' ${CONFIG_PATH}/cmds/${cmd})
      _tag=$(awk -F= '/tag=/{print $2}' ${CONFIG_PATH}/cmds/${cmd})
    fi
    [[ -n "${_image}" ]] || fail "$(add_usage)"
  fi
  ln -fs ${INSTALL_PATH}/c3tk ${INSTALL_PATH}/${_cmd}
  docker pull ${_image}:${_tag:-latest}
}

rm_cmd() {
  for _cmd in "${@}"
  do
    if [[ -s ${CONFIG_PATH}/cmds/${_cmd} ]] 
    then rm ${CONFIG_PATH}/cmds/${_cmd} 
    fi

    if [[ -L ${INSTALL_PATH}/${_cmd} ]] 
    then  rm ${INSTALL_PATH}/${_cmd}
    fi
  done
}

configure() {
  local _config _group
  for _config in $(find ~/.config/c3tk/config  -iname '*.c3tk')
  do
    _group=$(basename ${_config} '.c3tk')
    while read _line 
    do 
      echo " ${_group} => ${_line}"
      $0 $_line
    done < <(cat ${_config} | sed -e '/^[[:blank:]]*#/d;s/#.*//')
  done
}

fetch_add() {
  # 1. Curl URL to .c3tk file
  # 2. Configure 
  true
}

image_for() {
  local cmd="${1}"

  if [[ -z "${cmd}" ]]
    then
      echo "wayneeseguin/c3tk"
    else
      awk -F= '/image=/{print $2}' ${CONFIG_PATH}/cmds/${cmd}
  fi
}

shell_for() {
  local cmd="${1}"
  shift

  [[ "" == "${cmd}" ]] || cmd_exists "${cmd}" || unknown "${cmd}"
  image=$(image_for "${cmd}")
  docker_run -it -v $HOME/:/root "${image}" bash "${@}"
}

run_cmd() {
  local cmd="${1}"
  shift

  _image=$(awk -F= '/image/{print $2}' "${CONFIG_PATH}/cmds/${cmd}")
  _tag=${TAG:-$(awk -F= '/tag/{print $2}' "${CONFIG_PATH}/cmds/${cmd}")}
  _configs=($(awk -F= '/configs/{print $2}' "${CONFIG_PATH}/cmds/${cmd}" | tr ',' ' '))
  _cmd=($(awk -F= '/cmd/{print $2}' "${CONFIG_PATH}/cmds/${cmd}" ))
  grep -q 'stream' "${CONFIG_PATH}/cmds/${cmd}" &&
    _c="${_c} --log-driver=none -a stdin -a stdout -a stderr "
  grep -q 'tty' "${CONFIG_PATH}/cmds/${cmd}" && 
    _c="${_c} -t "

  for _config in "${_configs[@]}"
  do _c="${_c} -v $HOME/${_config}:/root/${_config}"
  done

  docker_run -i ${_c} "${_image}:${_tag:-latest}" "${_cmd:-"${cmd}"}" "${@}"
}

cmd_exists() {
  local _cmd="${1}"
  [[ -s "${CONFIG_PATH}/cmds/${_cmd}" ]]
}

env_setup() {
  true \
    "${CONFIG_PATH:="$HOME/.config/c3tk"}" \
    "${INSTALL_PREFIX:="/usr/local/bin"}" \
    "${INSTALL_PATH:="${INSTALL_PREFIX}/c3tk/bin"}" \
    "${IMAGE_TAG:="${TAG:-latest}"}"

  [[ "" == "${DEBUG}" ]] || set -xv

  touch ~/.saferc ~/.vaultrc ~/.flyrc
}

unknown() {
  fail "${1} not found, do you need to \`add\` it?"
}

dispatch_cmd() {
  local cmd="${1}"
  shift

  case "${cmd}" in 
    (add) add_cmd "$@" ;;
    (c3tk) usage ;;
    (configure) configure "${@}" ;;
    (fetch) fetch_add "${@}" ;;
    (install) install ;;
    (list) installed_cmds ;;
    (rm) rm_cmd "$@" ;;
    (shell) shell_for ${@} ;;
    (*)
      cmd_exists ${cmd} || unknown "${cmd}"

      run_cmd ${cmd} ${@}
      ;;
  esac
}

main() {
  env_setup

  # Allow this script to be symlinked as the actual command name :)
  cmd="$1" ; [[ ${0//*\/} == "c3tk" ]] && shift || cmd="${0//*\/}"

  dispatch_cmd "${cmd}" $@
  
  exit 0
}

main $@
